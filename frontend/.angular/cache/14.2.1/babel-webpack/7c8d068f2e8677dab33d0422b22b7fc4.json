{"ast":null,"code":"import _asyncToGenerator from \"/home/benter/Entwicklung/workspace/todoApp/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { HttpParams } from \"@angular/common/http\";\nimport { environment } from \"../../environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TodoService {\n  constructor(http) {\n    this.http = http;\n    this.url = environment.baseUrl + \"/api/todos\";\n  }\n\n  getMyTodos() {\n    return this.http.get(this.url);\n  }\n\n  createTodo(todo) {\n    return this.http.post(this.url, todo);\n  }\n\n  deleteTodo(todo) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (todo.id) {\n        let queryParams = new HttpParams();\n        queryParams = queryParams.append(\"id\", todo.id);\n\n        _this.http.delete(_this.url, {\n          params: queryParams\n        }).subscribe({\n          next: success => {\n            console.log('tr');\n            return true;\n          },\n          error: err => {\n            console.error(err);\n            return false;\n          }\n        });\n      }\n\n      return false;\n    })();\n  }\n\n}\n\nTodoService.ɵfac = function TodoService_Factory(t) {\n  return new (t || TodoService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nTodoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TodoService,\n  factory: TodoService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AAEA,SAAoBA,UAApB,QAAqC,sBAArC;AAEA,SAAQC,WAAR,QAA0B,gCAA1B;;;AAKA,OAAM,MAAOC,WAAP,CAAkB;EAItBC,YAAoBC,IAApB,EAAoC;IAAhB;IAFZ,WAAMH,WAAW,CAACI,OAAZ,GAAsB,YAA5B;EAGP;;EAEMC,UAAU;IACf,OAAO,KAAKF,IAAL,CAAUG,GAAV,CAAsB,KAAKC,GAA3B,CAAP;EACD;;EAEMC,UAAU,CAACC,IAAD,EAAW;IAC1B,OAAO,KAAKN,IAAL,CAAUO,IAAV,CAAqB,KAAKH,GAA1B,EAA+BE,IAA/B,CAAP;EACD;;EAEYE,UAAU,CAACF,IAAD,EAAW;IAAA;;IAAA;MAChC,IAAIA,IAAI,CAACG,EAAT,EAAa;QACX,IAAIC,WAAW,GAAG,IAAId,UAAJ,EAAlB;QACAc,WAAW,GAAGA,WAAW,CAACC,MAAZ,CAAmB,IAAnB,EAAyBL,IAAI,CAACG,EAA9B,CAAd;;QACA,KAAI,CAACT,IAAL,CAAUY,MAAV,CAAiB,KAAI,CAACR,GAAtB,EAA2B;UAACS,MAAM,EAAEH;QAAT,CAA3B,EAAkDI,SAAlD,CAA4D;UAC1DC,IAAI,EAAEC,OAAO,IAAG;YACdC,OAAO,CAACC,GAAR,CAAY,IAAZ;YACA,OAAO,IAAP;UACD,CAJyD;UAK1DC,KAAK,EAAEC,GAAG,IAAG;YACXH,OAAO,CAACE,KAAR,CAAcC,GAAd;YACA,OAAO,KAAP;UACD;QARyD,CAA5D;MAUD;;MACD,OAAO,KAAP;IAfgC;EAgBjC;;AA/BqB;;;mBAAXtB,aAAWuB;AAAA;;;SAAXvB;EAAWwB,SAAXxB,WAAW;EAAAyB,YAFV","names":["HttpParams","environment","TodoService","constructor","http","baseUrl","getMyTodos","get","url","createTodo","todo","post","deleteTodo","id","queryParams","append","delete","params","subscribe","next","success","console","log","error","err","i0","factory","providedIn"],"sourceRoot":"","sources":["/home/benter/Entwicklung/workspace/todoApp/frontend/src/app/service/todo.service.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\nimport {Todo} from \"../model/todo\";\nimport {HttpClient, HttpParams} from \"@angular/common/http\";\nimport {Observable} from \"rxjs\";\nimport {environment} from \"../../environments/environment\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  private url = environment.baseUrl + \"/api/todos\";\n\n  constructor(private http: HttpClient) {\n  }\n\n  public getMyTodos(): Observable<Todo[]> {\n    return this.http.get<Todo[]>(this.url);\n  }\n\n  public createTodo(todo: Todo): Observable<Todo> {\n    return this.http.post<Todo>(this.url, todo);\n  }\n\n  public async deleteTodo(todo: Todo): Promise<boolean> {\n    if (todo.id) {\n      let queryParams = new HttpParams();\n      queryParams = queryParams.append(\"id\", todo.id);\n      this.http.delete(this.url, {params: queryParams}).subscribe({\n        next: success => {\n          console.log('tr')\n          return true;\n        },\n        error: err => {\n          console.error(err);\n          return false;\n        }\n      });\n    }\n    return false;\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}